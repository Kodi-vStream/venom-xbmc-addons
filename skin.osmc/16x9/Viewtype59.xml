<?xml version="1.0" encoding="UTF-8"?>

<includes>

<!-- NETFIX -->
    <include name="Viewtype59">

        <control type="group">
            <visible>Control.IsVisible(59)</visible>



            <control type="fixedlist" id="59">

                <width>1630</width>
                <left>130</left>
                <top>600</top>
                <height>800</height>
                <onleft>59</onleft>
                <onright>59</onright>
                <onup condition="!Skin.HasSetting(KioskMode)">3001</onup>
                <onup>9111</onup>
                <ondown>61</ondown>
                <oninfo condition="Container.Content(Sets) | String.StartsWith(ListItem.Path,videodb://movies/sets/)">RunScript(script.skin.helper.service,action=textviewer,header=$INFO[ListItem.Label],message='"$VAR[GlobalPlotDescription]"')</oninfo>
                <viewtype label="Netflix">List</viewtype>
                <scrolltime tween="Quadratic" easing="out">300</scrolltime>
                <orientation>horizontal</orientation>
                <preloaditems>2</preloaditems>
                <focusposition>0</focusposition>
                <pagecontrol>-</pagecontrol>
                <visible>[Container.Content(Movies) | Container.Content(Sets) | Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)] + !String.StartsWith(Container.FolderPath,plugin://)</visible>
                <itemlayout condition="Skin.HasSetting(59_landscape) + [Container.Content(Movies) | Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Sets) | Container.Content(MusicVideos)]" width="238" height="256">
                    <control type="image">
                        <width>202</width>
                        <height>300</height>
                        <colordiffuse>DiffusePosterNF</colordiffuse>
                        <aspectratio align="center">keep</aspectratio>
                        <texture background="true" fallback="$PARAM[fallback]">$VAR[mediaImages]</texture>
                    </control>
                    <!-- Watched status -->
                    <control type="image">
                        <left>140</left>
                        <top>285</top>
                        <width>30</width>
                        <height>42</height>
                        <texture>$VAR[StatusOverlayWide]</texture>
                        <colordiffuse>OverlayColorNF</colordiffuse>
                    </control>
                </itemlayout>
                <itemlayout condition="Container.Content(Episodes) | !Skin.HasSetting(59_landscape)" width="560" height="281">
                    <control type="image">
                        <width>500</width>
                        <height>281</height>
                        <colordiffuse>DiffusePosterNF</colordiffuse>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <texture background="true" fallback="$PARAM[fallback]">$VAR[mediaImages_landscape]</texture>
                    </control>
                    <!-- Watched status -->
                    <control type="image">
                        <left>350</left>
                        <top>270</top>
                        <width>30</width>
                        <height>42</height>
                        <texture>$VAR[StatusOverlayWide]</texture>
                        <colordiffuse>OverlayColorNF</colordiffuse>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout condition="Skin.HasSetting(59_landscape) + [Container.Content(Movies) | Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Sets) | Container.Content(MusicVideos)]" width="238" height="256">
                    <control type="group">
                        <include>FocusAnim</include>
                        <control type="image">
                            <width>202</width>
                            <height>300</height>
                            <aspectratio align="center">keep</aspectratio>
                            <texture background="true" fallback="$PARAM[fallback]">$VAR[mediaImages]</texture>
                        </control>
                        <!-- Watched status -->
                        <control type="image">
                            <left>140</left>
                            <top>285</top>
                            <width>30</width>
                            <height>42</height>
                        	<texture>$VAR[StatusOverlayWide]</texture>
                        </control>
                    </control>
                </focusedlayout>
                <focusedlayout condition="Container.Content(Episodes) | !Skin.HasSetting(59_landscape)" width="560" height="281">
                    <control type="group">
                        <include>FocusAnim</include>
                        <control type="image">
                            <left>0</left>
                            <width>500</width>
                            <height>281</height>
                            <aspectratio scalediffuse="false">scale</aspectratio>
                            <texture background="true" fallback="$PARAM[fallback]">$VAR[mediaImages_landscape]</texture>
                        </control>
                        <!-- Watched status -->
    					<control type="image">
                            <left>350</left>
                            <top>270</top>
                            <width>30</width>
                            <height>42</height>
                        	<texture>$VAR[StatusOverlayWide]</texture>
    					</control>
                    </control>
                </focusedlayout>
            </control>

        </control>

        <control type="group">
            <left>130</left>
            <top>300</top>
            <visible>Control.IsVisible(59)</visible>
            <control type="label">
                <left>0</left>
                <top>0</top>
                <height>30</height>
                <width>550</width>
                <textcolor>TextColor1</textcolor>
                <scroll>false</scroll>
                <align>left</align>
                <font>Font50</font>
                <label>[LIGHT]$INFO[ListItem.Label][/LIGHT]</label>
                <visible>![Skin.HasSetting(ShowLogoAsTtile) + ![String.IsEmpty(ListItem.Art(clearlogo)) | String.StartsWith(ListItem.Path,videodb://movies/sets/)]] + !ListItem.IsParentFolder</visible>
            </control>
            <!-- Sublabel Info -->
            <control type="grouplist">
                <left>0</left>
                <top>38</top>
                <width>850</width>
                <height>30</height>
                <itemgap>10</itemgap>
                <orientation>horizontal</orientation>
                <control type="label">
                    <left>0</left>
                    <top>-2</top>
                    <font>Font40</font>
                    <width>55</width>
                    <height>24</height>
                    <label>$INFO[ListItem.Year]</label>
                </control>
                <control type="label">
                    <left>0</left>
                    <top>-2</top>
                    <font>Font40</font>
                    <width>250</width>
                    <height>24</height>
                    <label>$INFO[ListItem.RatingAndVotes]</label>
                </control>
                <control type="group">
                    <visible>Integer.IsGreater(ListItem.Property(unWatchedEpisodes),0) + [Container.Content(TVShows) | Container.Content(Seasons)]</visible>
                    <control type="label">
                        <left>0</left>
                        <top>0</top>
                        <width>58</width>
                        <height>24</height>
                        <font>FontSize_16B</font>
                        <textcolor>viewsinfo</textcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Property(unWatchedEpisodes)]</label>
                    </control>
                </control>
            </control>
        </control>

        <!-- Plot Info -->
        <control type="group">
            <left>130</left>
            <top>380</top>
            <visible>Control.IsVisible(59)</visible>

            <control type="label">
                <top>0</top>
                <height>30</height>
                <width>550</width>
                <textcolor>TextColor2</textcolor>
                <font>Font30</font>
                <scrollspeed>30</scrollspeed>
                <align>left</align>
                <label>$INFO[ListItem.Genre]</label>
                <visible>!Container.Content(Episodes)</visible>
                <!--<animation effect="slide" start="0,0" end="0,5" condition="[Container.Content(TVShows) | Container.Content(Seasons)]">Conditional</animation>-->
            </control>
            <control type="label">
                <top>5</top>
                <height>30</height>
                <width>550</width>
                <textcolor>TextColor2</textcolor>
                <font>Font36</font>
                <scrollspeed>30</scrollspeed>
                <align>left</align>
                <label>$INFO[ListItem.TVShowTitle] $INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</label>
                <visible>[Container.Content(Episodes) + !String.StartsWith(Container.FolderPath,plugin://plugin.video)] + ![Skin.HasSetting(ShowLogoAsTtile) + !String.IsEmpty(ListItem.Art(clearlogo))]</visible>
            </control>
            <control type="textbox">
                <top>45</top>
                <width>450</width>
                <height>150</height>
                <font>Font22</font>
                <textcolor>TextColor2</textcolor>
                <align>left</align>
                <autoscroll delay="8000" time="2000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
                <label>$VAR[Plot]</label>
                <visible>Container.Content(Movies) | Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)</visible>
            </control>

        </control>

    </include>

</includes>
