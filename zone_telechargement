# -*- coding: utf-8 -*-
# vStream https://github.com/Kodi-vStream/venom-xbmc-addons

import re
from resources.lib.gui.hoster import cHosterGui  # systeme de recherche pour l'hôte
from resources.lib.gui.gui import cGui  # systeme d'affichage pour xbmc
from resources.lib.handler.inputParameterHandler import cInputParameterHandler  # entree des parametres
from resources.lib.handler.outputParameterHandler import cOutputParameterHandler  # sortie des parametres
from resources.lib.handler.requestHandler import cRequestHandler  # requête url
from resources.lib.parser import cParser  # recherche de code
from resources.lib.comaddon import progress, VSlog  # import du dialog progress

SITE_IDENTIFIER = 'zone_telechargement'
SITE_NAME = 'Zone-Téléchargement'
SITE_DESC = 'Films et séries en téléchargement direct, HD/4K, VF/VOSTFR'

URL_MAIN = 'https://www.zone-telechargement.zone/'

# URLs de recherche
URL_SEARCH = (URL_MAIN + 'engine/search/', 'showMovies')
URL_SEARCH_MOVIES = (URL_SEARCH[0], 'showMovies')
MY_SEARCH_MOVIES = (URL_SEARCH[0], 'showMovies')
URL_SEARCH_SERIES = (URL_SEARCH[0], 'showMovies')
MY_SEARCH_SERIES = (URL_SEARCH[0], 'showMovies')
URL_SEARCH_ANIMS = (URL_SEARCH[0], 'showMovies')
MY_SEARCH_ANIMS = (URL_SEARCH[0], 'showMovies')

FUNCTION_SEARCH = 'showMovies'

# Menu Films
MOVIE_MOVIE = ('http://', 'showMenuMovies')
MOVIE_NEWS = (URL_MAIN + 'films/', 'showMovies')
MOVIE_HD = (URL_MAIN + 'films-hd/', 'showMovies')
MOVIE_4K = (URL_MAIN + 'films-ultra-hd-4k/', 'showMovies')
MOVIE_BLURAY = (URL_MAIN + 'films-blu-ray/', 'showMovies')
MOVIE_VIEWS = (URL_MAIN + 'films-populaires/', 'showMovies')
MOVIE_GENRES = (True, 'showGenresFilms')
MOVIE_ANNEES = (True, 'showMovieYears')
MOVIE_VF = (URL_MAIN + 'films-vf/', 'showMovies')
MOVIE_VOSTFR = (URL_MAIN + 'films-vostfr/', 'showMovies')

# Menu Séries
SERIE_SERIES = ('http://', 'showMenuTvShows')
SERIE_NEWS = (URL_MAIN + 'series/', 'showMovies')
SERIE_HD = (URL_MAIN + 'series-hd/', 'showMovies')
SERIE_VIEWS = (URL_MAIN + 'series-populaires/', 'showMovies')
SERIE_GENRES = (True, 'showGenresSeries')
SERIE_ANNEES = (True, 'showSerieYears')
SERIE_VFS = (URL_MAIN + 'series-vf/', 'showMovies')
SERIE_VOSTFRS = (URL_MAIN + 'series-vostfr/', 'showMovies')

# Menu Animés
ANIM_ANIMS = ('http://', 'showMenuAnims')
ANIM_NEWS = (URL_MAIN + 'animes/', 'showMovies')
ANIM_HD = (URL_MAIN + 'animes-hd/', 'showMovies')
ANIM_VIEWS = (URL_MAIN + 'animes-populaires/', 'showMovies')
ANIM_GENRES = (True, 'showGenresAnimes')
ANIM_ANNEES = (True, 'showAnimesYears')
ANIM_VFS = (URL_MAIN + 'animes-vf/', 'showMovies')
ANIM_VOSTFRS = (URL_MAIN + 'animes-vostfr/', 'showMovies')

# Menu Documentaires
DOC_NEWS = (URL_MAIN + 'documentaires/', 'showMovies')
DOC_DOCS = ('http://', 'showMenuDocs')
DOC_GENRES = (True, 'showGenresDocs')

# Menu Spectacles
SPECTACLE_NEWS = (URL_MAIN + 'spectacles/', 'showMovies')
SPECTACLE_GENRES = (True, 'showGenresSpectacles')

# Menu Emissions TV
EMISSION_NEWS = (URL_MAIN + 'emissions-tv/', 'showMovies')


def load():
    oGui = cGui()

    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', 'http://venom/')
    oGui.addDir(SITE_IDENTIFIER, 'showSearch', 'Recherche', 'search.png', oOutputParameterHandler)

    # Films
    oOutputParameterHandler.addParameter('siteUrl', MOVIE_MOVIE[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_MOVIE[1], 'Films', 'films.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_NEWS[1], 'Films (Derniers ajouts)', 'news.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_4K[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_4K[1], 'Films (Ultra HD 4K)', '4k.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_HD[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_HD[1], 'Films (HD)', 'hd.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_BLURAY[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_BLURAY[1], 'Films (Blu-Ray)', 'bluray.png', oOutputParameterHandler)

    # Séries
    oOutputParameterHandler.addParameter('siteUrl', SERIE_SERIES[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_SERIES[1], 'Séries', 'series.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', SERIE_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_NEWS[1], 'Séries (Derniers ajouts)', 'news.png', oOutputParameterHandler)

    # Animés
    oOutputParameterHandler.addParameter('siteUrl', ANIM_ANIMS[0])
    oGui.addDir(SITE_IDENTIFIER, ANIM_ANIMS[1], 'Animés', 'animes.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', ANIM_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, ANIM_NEWS[1], 'Animés (Derniers ajouts)', 'news.png', oOutputParameterHandler)

    # Documentaires
    oOutputParameterHandler.addParameter('siteUrl', DOC_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, DOC_NEWS[1], 'Documentaires', 'doc.png', oOutputParameterHandler)

    # Spectacles
    oOutputParameterHandler.addParameter('siteUrl', SPECTACLE_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, SPECTACLE_NEWS[1], 'Spectacles', 'spectacle.png', oOutputParameterHandler)

    # Emissions TV
    oOutputParameterHandler.addParameter('siteUrl', EMISSION_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, EMISSION_NEWS[1], 'Émissions TV', 'tv.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showMenuMovies():
    oGui = cGui()

    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', MY_SEARCH_MOVIES[0])
    oGui.addDir(SITE_IDENTIFIER, MY_SEARCH_MOVIES[1], 'Recherche Films', 'search.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_NEWS[1], 'Films (Derniers ajouts)', 'news.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_4K[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_4K[1], 'Films (Ultra HD 4K)', '4k.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_HD[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_HD[1], 'Films (HD)', 'hd.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_BLURAY[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_BLURAY[1], 'Films (Blu-Ray)', 'bluray.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_VIEWS[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_VIEWS[1], 'Films (Les plus vus)', 'views.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_GENRES[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_GENRES[1], 'Films (Genres)', 'genres.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_ANNEES[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_ANNEES[1], 'Films (Par Années)', 'annees.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_VF[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_VF[1], 'Films (VF)', 'vf.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', MOVIE_VOSTFR[0])
    oGui.addDir(SITE_IDENTIFIER, MOVIE_VOSTFR[1], 'Films (VOSTFR)', 'vostfr.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showMenuTvShows():
    oGui = cGui()

    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', MY_SEARCH_SERIES[0])
    oGui.addDir(SITE_IDENTIFIER, MY_SEARCH_SERIES[1], 'Recherche Séries', 'search.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', SERIE_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_NEWS[1], 'Séries (Derniers ajouts)', 'news.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', SERIE_HD[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_HD[1], 'Séries (HD)', 'hd.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', SERIE_VIEWS[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_VIEWS[1], 'Séries (Les plus vues)', 'views.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', SERIE_GENRES[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_GENRES[1], 'Séries (Genres)', 'genres.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', SERIE_ANNEES[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_ANNEES[1], 'Séries (Par Années)', 'annees.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', SERIE_VFS[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_VFS[1], 'Séries (VF)', 'vf.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', SERIE_VOSTFRS[0])
    oGui.addDir(SITE_IDENTIFIER, SERIE_VOSTFRS[1], 'Séries (VOSTFR)', 'vostfr.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showMenuAnims():
    oGui = cGui()

    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', MY_SEARCH_ANIMS[0])
    oGui.addDir(SITE_IDENTIFIER, MY_SEARCH_ANIMS[1], 'Recherche Animés', 'search.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', ANIM_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, ANIM_NEWS[1], 'Animés (Derniers ajouts)', 'news.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', ANIM_HD[0])
    oGui.addDir(SITE_IDENTIFIER, ANIM_HD[1], 'Animés (HD)', 'hd.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', ANIM_VIEWS[0])
    oGui.addDir(SITE_IDENTIFIER, ANIM_VIEWS[1], 'Animés (Les plus vus)', 'views.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', ANIM_GENRES[0])
    oGui.addDir(SITE_IDENTIFIER, ANIM_GENRES[1], 'Animés (Genres)', 'genres.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', ANIM_ANNEES[0])
    oGui.addDir(SITE_IDENTIFIER, ANIM_ANNEES[1], 'Animés (Par Années)', 'annees.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', ANIM_VFS[0])
    oGui.addDir(SITE_IDENTIFIER, ANIM_VFS[1], 'Animés (VF)', 'vf.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', ANIM_VOSTFRS[0])
    oGui.addDir(SITE_IDENTIFIER, ANIM_VOSTFRS[1], 'Animés (VOSTFR)', 'vostfr.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showMenuDocs():
    oGui = cGui()

    oOutputParameterHandler = cOutputParameterHandler()
    oOutputParameterHandler.addParameter('siteUrl', DOC_NEWS[0])
    oGui.addDir(SITE_IDENTIFIER, DOC_NEWS[1], 'Documentaires (Derniers ajouts)', 'news.png', oOutputParameterHandler)

    oOutputParameterHandler.addParameter('siteUrl', DOC_GENRES[0])
    oGui.addDir(SITE_IDENTIFIER, DOC_GENRES[1], 'Documentaires (Genres)', 'genres.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showSearch():
    oGui = cGui()

    sSearchText = oGui.showKeyBoard()
    if sSearchText:
        sUrl = URL_SEARCH[0] + sSearchText.replace(' ', '+')
        showMovies(sUrl)
        oGui.setEndOfDirectory()
        return


def showGenresFilms():
    oGui = cGui()

    liste = []
    liste.append(['Action', URL_MAIN + 'films/action/'])
    liste.append(['Animation', URL_MAIN + 'films/animation/'])
    liste.append(['Arts Martiaux', URL_MAIN + 'films/arts-martiaux/'])
    liste.append(['Aventure', URL_MAIN + 'films/aventure/'])
    liste.append(['Biopic', URL_MAIN + 'films/biopic/'])
    liste.append(['Comédie', URL_MAIN + 'films/comedie/'])
    liste.append(['Comédie Dramatique', URL_MAIN + 'films/comedie-dramatique/'])
    liste.append(['Comédie Musicale', URL_MAIN + 'films/comedie-musicale/'])
    liste.append(['Drame', URL_MAIN + 'films/drame/'])
    liste.append(['Epouvante Horreur', URL_MAIN + 'films/epouvante-horreur/'])
    liste.append(['Espionnage', URL_MAIN + 'films/espionnage/'])
    liste.append(['Famille', URL_MAIN + 'films/famille/'])
    liste.append(['Fantastique', URL_MAIN + 'films/fantastique/'])
    liste.append(['Guerre', URL_MAIN + 'films/guerre/'])
    liste.append(['Historique', URL_MAIN + 'films/historique/'])
    liste.append(['Musical', URL_MAIN + 'films/musical/'])
    liste.append(['Policier', URL_MAIN + 'films/policier/'])
    liste.append(['Romance', URL_MAIN + 'films/romance/'])
    liste.append(['Science Fiction', URL_MAIN + 'films/science-fiction/'])
    liste.append(['Thriller', URL_MAIN + 'films/thriller/'])
    liste.append(['Western', URL_MAIN + 'films/western/'])

    oOutputParameterHandler = cOutputParameterHandler()
    for sTitle, sUrl in liste:
        oOutputParameterHandler.addParameter('siteUrl', sUrl)
        oGui.addDir(SITE_IDENTIFIER, 'showMovies', sTitle, 'genres.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showGenresSeries():
    oGui = cGui()

    liste = []
    liste.append(['Action', URL_MAIN + 'series/action/'])
    liste.append(['Animation', URL_MAIN + 'series/animation/'])
    liste.append(['Aventure', URL_MAIN + 'series/aventure/'])
    liste.append(['Comédie', URL_MAIN + 'series/comedie/'])
    liste.append(['Documentaire', URL_MAIN + 'series/documentaire/'])
    liste.append(['Drame', URL_MAIN + 'series/drame/'])
    liste.append(['Epouvante Horreur', URL_MAIN + 'series/epouvante-horreur/'])
    liste.append(['Famille', URL_MAIN + 'series/famille/'])
    liste.append(['Fantastique', URL_MAIN + 'series/fantastique/'])
    liste.append(['Guerre', URL_MAIN + 'series/guerre/'])
    liste.append(['Historique', URL_MAIN + 'series/historique/'])
    liste.append(['Musical', URL_MAIN + 'series/musical/'])
    liste.append(['Policier', URL_MAIN + 'series/policier/'])
    liste.append(['Romance', URL_MAIN + 'series/romance/'])
    liste.append(['Science Fiction', URL_MAIN + 'series/science-fiction/'])
    liste.append(['Thriller', URL_MAIN + 'series/thriller/'])

    oOutputParameterHandler = cOutputParameterHandler()
    for sTitle, sUrl in liste:
        oOutputParameterHandler.addParameter('siteUrl', sUrl)
        oGui.addDir(SITE_IDENTIFIER, 'showMovies', sTitle, 'genres.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showGenresAnimes():
    oGui = cGui()

    liste = []
    liste.append(['Action', URL_MAIN + 'animes/action/'])
    liste.append(['Aventure', URL_MAIN + 'animes/aventure/'])
    liste.append(['Comédie', URL_MAIN + 'animes/comedie/'])
    liste.append(['Drame', URL_MAIN + 'animes/drame/'])
    liste.append(['Ecchi', URL_MAIN + 'animes/ecchi/'])
    liste.append(['Enfants', URL_MAIN + 'animes/enfants/'])
    liste.append(['Fantastique', URL_MAIN + 'animes/fantastique/'])
    liste.append(['Harem', URL_MAIN + 'animes/harem/'])
    liste.append(['Horreur', URL_MAIN + 'animes/horreur/'])
    liste.append(['Josei', URL_MAIN + 'animes/josei/'])
    liste.append(['Magic', URL_MAIN + 'animes/magic/'])
    liste.append(['Mecha', URL_MAIN + 'animes/mecha/'])
    liste.append(['Romance', URL_MAIN + 'animes/romance/'])
    liste.append(['School', URL_MAIN + 'animes/school/'])
    liste.append(['Seinen', URL_MAIN + 'animes/seinen/'])
    liste.append(['Shojo', URL_MAIN + 'animes/shojo/'])
    liste.append(['Shonen', URL_MAIN + 'animes/shonen/'])
    liste.append(['Sports', URL_MAIN + 'animes/sports/'])
    liste.append(['Surnaturel', URL_MAIN + 'animes/surnaturel/'])
    liste.append(['Tranche de vie', URL_MAIN + 'animes/tranche-de-vie/'])

    oOutputParameterHandler = cOutputParameterHandler()
    for sTitle, sUrl in liste:
        oOutputParameterHandler.addParameter('siteUrl', sUrl)
        oGui.addDir(SITE_IDENTIFIER, 'showMovies', sTitle, 'genres.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showGenresDocs():
    oGui = cGui()

    liste = []
    liste.append(['Animalier', URL_MAIN + 'documentaires/animalier/'])
    liste.append(['Art et Culture', URL_MAIN + 'documentaires/art-culture/'])
    liste.append(['Célébrité', URL_MAIN + 'documentaires/celebrite/'])
    liste.append(['Découverte', URL_MAIN + 'documentaires/decouverte/'])
    liste.append(['Histoire', URL_MAIN + 'documentaires/histoire/'])
    liste.append(['Investigations', URL_MAIN + 'documentaires/investigations/'])
    liste.append(['Nature', URL_MAIN + 'documentaires/nature/'])
    liste.append(['Politique', URL_MAIN + 'documentaires/politique/'])
    liste.append(['Reportage', URL_MAIN + 'documentaires/reportage/'])
    liste.append(['Science', URL_MAIN + 'documentaires/science/'])
    liste.append(['Société', URL_MAIN + 'documentaires/societe/'])
    liste.append(['Sport', URL_MAIN + 'documentaires/sport/'])
    liste.append(['Technologie', URL_MAIN + 'documentaires/technologie/'])

    oOutputParameterHandler = cOutputParameterHandler()
    for sTitle, sUrl in liste:
        oOutputParameterHandler.addParameter('siteUrl', sUrl)
        oGui.addDir(SITE_IDENTIFIER, 'showMovies', sTitle, 'genres.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showGenresSpectacles():
    oGui = cGui()

    liste = []
    liste.append(['Concert', URL_MAIN + 'spectacles/concert/'])
    liste.append(['Danse', URL_MAIN + 'spectacles/danse/'])
    liste.append(['Humour', URL_MAIN + 'spectacles/humour/'])
    liste.append(['Opéra', URL_MAIN + 'spectacles/opera/'])
    liste.append(['Théâtre', URL_MAIN + 'spectacles/theatre/'])

    oOutputParameterHandler = cOutputParameterHandler()
    for sTitle, sUrl in liste:
        oOutputParameterHandler.addParameter('siteUrl', sUrl)
        oGui.addDir(SITE_IDENTIFIER, 'showMovies', sTitle, 'genres.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showMovieYears():
    oGui = cGui()

    oOutputParameterHandler = cOutputParameterHandler()
    for i in reversed(range(1920, 2026)):
        Year = str(i)
        oOutputParameterHandler.addParameter('siteUrl', URL_MAIN + 'films/annee-' + Year + '/')
        oGui.addDir(SITE_IDENTIFIER, 'showMovies', Year, 'annees.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showSerieYears():
    oGui = cGui()

    oOutputParameterHandler = cOutputParameterHandler()
    for i in reversed(range(1950, 2026)):
        Year = str(i)
        oOutputParameterHandler.addParameter('siteUrl', URL_MAIN + 'series/annee-' + Year + '/')
        oGui.addDir(SITE_IDENTIFIER, 'showMovies', Year, 'annees.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showAnimesYears():
    oGui = cGui()

    oOutputParameterHandler = cOutputParameterHandler()
    for i in reversed(range(1960, 2026)):
        Year = str(i)
        oOutputParameterHandler.addParameter('siteUrl', URL_MAIN + 'animes/annee-' + Year + '/')
        oGui.addDir(SITE_IDENTIFIER, 'showMovies', Year, 'annees.png', oOutputParameterHandler)

    oGui.setEndOfDirectory()


def showMovies(sSearch=''):
    oGui = cGui()

    oInputParameterHandler = cInputParameterHandler()
    sUrl = oInputParameterHandler.getValue('siteUrl')
    if sSearch:
        sUrl = sSearch.replace(' ', '+')

    oRequestHandler = cRequestHandler(sUrl)
    sHtmlContent = oRequestHandler.request()

    # Pattern pour Zone-Téléchargement (à adapter selon la structure réelle du site)
    # Ce pattern est générique et devra être adapté après inspection du code source
    sPattern = '<div class="movie-item">.*?<img src="([^"]+)".*?<a href="([^"]+)".*?title="([^"]+)".*?<span class="quality">([^<]+)</span>.*?<span class="lang">([^<]+)</span>'
    
    oParser = cParser()
    aResult = oParser.parse(sHtmlContent, sPattern)
    
    VSlog(str(aResult))  # Pour débuggage - à commenter une fois fini

    if not aResult[0]:
        oGui.addText(SITE_IDENTIFIER)

    if aResult[0]:
        total = len(aResult[1])
        progress_ = progress().VScreate(SITE_NAME)

        oOutputParameterHandler = cOutputParameterHandler()
        for aEntry in aResult[1]:
            progress_.VSupdate(progress_, total)
            if progress_.iscanceled():
                break

            sThumb = aEntry[0]
            sUrl2 = aEntry[1]
            sTitle = aEntry[2]
            sQual = aEntry[3] if len(aEntry) > 3 else ''
            sLang = aEntry[4] if len(aEntry) > 4 else ''
            sDesc = ''

            # Nettoyage du titre
            sTitle = sTitle.replace('Télécharger', '').strip()

            # Formatage du titre avec informations
            if sQual and sLang:
                sTitle = ('%s [%s] (%s)') % (sTitle, sQual, sLang.upper())
            elif sQual:
                sTitle = ('%s [%s]') % (sTitle, sQual)

            # Vérifier si l'URL est complète
            if not sUrl2.startswith('http'):
                sUrl2 = URL_MAIN + sUrl2.lstrip('/')

            oOutputParameterHandler.addParameter('siteUrl', sUrl2)
            oOutputParameterHandler.addParameter('sMovieTitle', sTitle)
            oOutputParameterHandler.addParameter('sThumb', sThumb)
            oOutputParameterHandler.addParameter('sDesc', sDesc)

            # Déterminer le type de contenu
            if '/series' in sUrl or '/series' in sUrl2:
                oGui.addTV(SITE_IDENTIFIER, 'ShowSerieSaisonEpisodes', sTitle, '', sThumb, sDesc, oOutputParameterHandler)
            elif '/animes' in sUrl or '/animes' in sUrl2
